#include<bits/stdc++.h>
using namespace std;
using ll = long long;
/*
ID: mdnahidibnaharun
LANG: C++
TASK: practice 
*/
int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    // freopen("mowing.in", "r", stdin); 
    // freopen("mowing.out", "w", stdout); 
    int size;
    cin>>size;
    vector<pair<char,int>>steps(size);
    for(auto &[dir,num_step] : steps)cin>>dir>>num_step;

    pair<int,int> curr{0,0};
    map<pair<int,int>,int>visits{{curr,0}};

    int time=0,max_grow=INT32_MAX;
    for(auto &[dir, num_step] : steps){
        pair<int,int>delta;
        switch(dir){
            case 'N':
            delta = pair<int,int> {0,1};
            break;
            case 'W':
            delta = pair<int,int> {-1,0};
            break;
            case 'E':
            delta = pair<int,int> {1,0};
            break;
            case 'S':
            delta = pair<int,int> {0,-1};
            break;
        }
        for(int i=0;i<num_step;i++){
            curr = pair<int,int> {curr.first + delta.first ,curr.second +delta.second};
            time++;
            if(visits.count(curr)){
                max_grow=min(max_grow,time-visits[curr]);
            }
            visits[curr]=time;
        }
    }
if(max_grow==INT32_MAX)
cout<<-1;
else cout<<max_grow;
    
    
    return 0;
}




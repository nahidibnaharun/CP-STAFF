#include<bits/stdc++.h>
using namespace std;
using ll = long long;
using ull = unsigned long long;
const ll M=1e9+1;
const int mxdps=5001,INF=10000;
/*
//      _   __  ___  __   __ _______ _______
//     / | / / / _ \ \ \__\ \\__  __\\  __  \ 
//    /  |/ / / /_\ \ \  ___ \  \ \   \ \ \  \ 
//   / /|  / / ____  \ \ \  \ \ _\ \___\ \/  /
//  /_/ |_/ /_/    \__\ \_\  \_\\______\\___/

ID: mdnahidibnaharun
LANG: C++
TASK: practice 
*/
int dp[mxdps],dpp[mxdps];
void solve(){
    int n,sm,cnt=0;cin>>n;
    vector<int>a(n),b(n);
    for(auto &x:a)cin>>x;
    sm=a[0];
    for(int i=1;i<n;i++)sm=gcd(sm,a[i]);
    for(int i=0;i<n;i++){
        b[i]=a[i]/sm;
        if(b[i]==1)cnt++;
    }
    if(cnt>0){cout<<n-cnt<<endl;return;}
    for(int i=1;i<=mxdps;i++)dp[i]=INF;
    for(int i=0;i<n;i++){
        for(int j=1;j<=mxdps;j++)dpp[j]=dp[j];
        dpp[b[i]]=1;
        for(int j=1;j<=mxdps;j++)if(dp[j]<INF){
            int k=gcd(j,b[i]);dpp[k]=min(dpp[k],dp[j]+1);
        }
        for(int i=1;i<=mxdps;i++)dp[i]=dpp[i];
    }
    cout<<(n+(dp[1]-2));
    cout<<endl;
}
int main(){
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    //  freopen("tracing.in", "r", stdin); 
    // freopen("tracing.out", "w", stdout); 
  int t;cin>>t;
  while(t--)
    solve();
} 

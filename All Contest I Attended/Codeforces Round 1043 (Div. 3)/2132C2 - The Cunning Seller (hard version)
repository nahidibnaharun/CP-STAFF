#include<bits/stdc++.h>
using namespace std;
using ll = long long;
using ull = unsigned long long;
using ui = unsigned int;
const ll INF = 1e17;
/*
//      _   __  ___  __   __ _______ _______
//     / | / / / _ \ \ \__\ \\__  __\\  __  \ 
//    /  |/ / / /_\ \ \  ___ \  \ \   \ \ \  \ 
//   / /|  / / ____  \ \ \  \ \ _\ \___\ \/  /
//  /_/ |_/ /_/    \__\ \_\  \_\\______\\___/

ID: mdnahidibnaharun
LANG: C++
TASK: practice 
*/
int p;
vector<ull> p3;
void cp3(){
p3.push_back(1);
while(p3.back()<=(ull)2e9)p3.push_back(p3.back()*3ULL);
p=(int)p3.size();
}
void solve(){
    ull n,k;cin>>n>>k;
    vector<ull>dg;
    ull tm=n;
    while(tm>0){
        dg.push_back(tm%3ULL);
        tm/=3ULL;
    }
    if(dg.empty())dg.push_back(0);
    ull s=0;
    for(ull d:dg)s+=d;
    if(k<s){cout<<-1; return;}

    ull m=min(k,n);
    if((m & 1ULL) != (s&1ULL)){
        if(m==0){cout<<-1; return;}
        --m;
    }

   if(m<s){cout<<-1; return;}
   ull spn=(m-s)/2;
   int mxl=max((int)dg.size()+5,p);
   vector<ull>cnt(mxl,0);
   for(size_t i=0;i<dg.size();++i)cnt[i]=dg[i];
    ull rm=spn;
    for(int i=mxl-1;i>=1 && rm>0 ; --i){
        if(cnt[i]==0)continue;
        ull tk=min(cnt[i],rm);
        cnt[i]-=tk;
        cnt[i-1]+=3ULL*tk;
        rm-=tk;
    }
    if(rm!=0){cout<<-1; return;}
    ull fc=0;
    for(int i=0;i<mxl;++i){
        if(cnt[i]==0)continue;
        ull c;
        if(i==0)c=3ULL;
        else c=p3[i+1]+(ull)i*p3[i-1];
        fc+=cnt[i]*c;
    }
    cout<<fc;
 }
int main(){
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    int t;cin>>t;cp3();
    while(t--){
        solve();
        cout<<endl;
    }
return 0;
}

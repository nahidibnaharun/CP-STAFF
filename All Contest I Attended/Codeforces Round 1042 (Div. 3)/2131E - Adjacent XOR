#include<bits/stdc++.h>
using namespace std;
using ll = long long;
using ull = unsigned long long;
using ui = unsigned int;
// const int INF=500;
const ll INF = 2e5+5;
/*
//      _   __  ___  __   __ _______ _______
//     / | / / / _ \ \ \__\ \\__  __\\  __  \ 
//    /  |/ / / /_\ \ \  ___ \  \ \   \ \ \  \ 
//   / /|  / / ____  \ \ \  \ \ _\ \___\ \/  /
//  /_/ |_/ /_/    \__\ \_\  \_\\______\\___/

ID: mdnahidibnaharun
LANG: C++
TASK: practice 
*/
void solve(){
int n;cin>>n;vector<ui>a(n+1),b(n+1);
for(int i=1;i<=n;++i)cin>>a[i];
for(int i=1;i<=n;++i)cin>>b[i];
vector<ui>pf(n+1,0);
for(int i=1;i<=n;++i)pf[i]=pf[i-1]^a[i];
unordered_map<ui,vector<int>>ps;ps.reserve(n*2);
for(int i=1;i<=n;++i)ps[pf[i]].push_back(i);
vector<ui>cr=a;set<int>usd;
bool ans=true;
for(int i=1;i<=n-1 && ans;++i){
    if(cr[i]==b[i])continue;
    ui v=cr[i]^b[i],tgt=pf[i]^v;
    auto itv=ps.find(tgt);
    if(itv==ps.end()){ans=false;break;}
    const vector<int>&vc=itv->second;
    auto itusd=usd.lower_bound(i);
    int lmt=(itusd==usd.end()?n:*itusd);
    auto itps=lower_bound(vc.begin(),vc.end(),i+1);
    if(itps==vc.end()){ans=false;break;}
    int r=*itps;
    if(r>lmt){ans=false;break;}
    for(int j=r-1;j>=i;--j){
        cr[j]^=cr[j+1];usd.insert(j);
    }
}
if(ans && cr[n]==b[n])cout<<"YES";
else cout<<"NO";
}

int main(){
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    int t;cin>>t;
    while(t--){
        solve();
        cout<<endl;
    }    
return 0;
}

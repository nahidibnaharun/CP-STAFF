#include<bits/stdc++.h>
using namespace std;
using ll = long long;
using ull = unsigned long long;
const int INF=500;
/*
//      _   __  ___  __   __ _______ _______
//     / | / / / _ \ \ \__\ \\__  __\\  __  \ 
//    /  |/ / / /_\ \ \  ___ \  \ \   \ \ \  \ 
//   / /|  / / ____  \ \ \  \ \ _\ \___\ \/  /
//  /_/ |_/ /_/    \__\ \_\  \_\\______\\___/

ID: mdnahidibnaharun
LANG: C++
TASK: practice 
*/

int q(const vector<int>& v) {
    int r;
    cout << "? " << v.size();
    for (int x : v) cout << " " << x;
    cout << endl;
    cin >> r;
    return r;
}

void solve() {
    int n;
    cin >> n;
    vector<int> v(n);
    iota(v.begin(), v.end(), 1);

    int l;
    if (q(v) > 0) {
        int lo = 1, hi = n, m, id;
        while (lo <= hi) {
            m = (lo + hi) >> 1;
            vector<int> t(m);
            iota(t.begin(), t.end(), 1);
            if (q(t) > 0) id = m, hi = m - 1;
            else lo = m + 1;
        }
        l = id - 1;
    } else {
        int lo = 1, hi = n, m, id;
        while (lo <= hi) {
            m = (lo + hi) >> 1;
            vector<int> t;
            for (int j = n; j >= m; --j) t.push_back(j);
            if (q(t) > 0) id = m, lo = m + 1;
            else hi = m - 1;
        }
        l = id + 1;
    }

    string s(n, ' ');
    for (int i = 1; i <= n; i += 8) {
        int k = min(8, n - i + 1);
        vector<int> t;
        for (int j = 0; j < k; ++j) {
            if (j) t.push_back(l);
            for (int c = 0; c < (1 << j); ++c) t.push_back(l);
            for (int c = 0; c < (1 << j); ++c) t.push_back(i + j);
        }
        int x = q(t);
        for (int j = 0; j < k; ++j)
            s[i + j - 1] = (x >> j & 1) ? ')' : '(';
    }

    cout << "! " << s << endl;
}
int main(){
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    int t;cin>>t;
    while(t--){
    solve();
    // cout<<endl;
    }
}

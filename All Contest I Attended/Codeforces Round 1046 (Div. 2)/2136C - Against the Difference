#include <algorithm>
#include<bits/stdc++.h>
using namespace std;
using ll = long long;
using ull = unsigned long long;
using ui = unsigned int;
const ll INF = 1e17;
/*
//      _   __  ___  __   __ _______ _______
//     / | / / / _ \ \ \__\ \\__  __\\  __  \ 
//    /  |/ / / /_\ \ \  ___ \  \ \   \ \ \  \ 
//   / /|  / / ____  \ \ \  \ \ _\ \___\ \/  /
//  /_/ |_/ /_/    \__\ \_\  \_\\______\\___/

ID: mdnahidibnaharun
LANG: C++
TASK: practice 
*/
struct var{int x,y,z;};
void solve(){
   int n;cin>>n;
   vector<int>a(n+1);
   for(int i=1;i<=n;i++)cin>>a[i];
   vector<vector<int>>ps(n+1);
   for(int i=1;i<=n;++i)ps[a[i]].push_back(i);
   vector<var>ar;
   for(int i=1;i<=n;++i){
    int ts=(int)ps[i].size();
    if(ts<i)continue;
    for(int j=0;j+i-1<ts;j++)ar.push_back({ps[i][j],ps[i][j+i-1],i});
   }
    if(ar.empty()){cout<<0;return;}
    sort(ar.begin(),ar.end(),[](const var &a,const var &b){
        if(a.y!=b.y)return a.y<b.y;
        return a.x<b.x;
    });
    int m=(int)ar.size();
    vector<int>last(m);
    for(int i=0;i<m;i++)last[i]=ar[i].y;
    vector<int>dp(m+1,0);
    for(int i=1;i<=m;i++){
        int xi=ar[i-1].x,ii=(int)(upper_bound(last.begin(),last.begin()+(i-1),xi-1)-last.begin());
        dp[i]=max(dp[i-1],dp[ii]+ar[i-1].z);
    }
    cout<<dp[m];
    
 }

int main(){
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    int t;cin>>t;
    while(t--){
        solve();
        cout<<endl;
    }
return 0;
}

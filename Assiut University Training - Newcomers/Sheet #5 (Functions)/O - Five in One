#include<bits/stdc++.h>
using namespace std;
using ll = long long;
using ull = unsigned long long;
using ui = unsigned int;
const ll INF = 1e17+7;
/*
//      _   __  ___  __   __ _______ _______
//     / | / / / _ \ \ \__\ \\__  __\\  __  \ 
//    /  |/ / / /_\ \ \  ___ \  \ \   \ \ \  \ 
//   / /|  / / ____  \ \ \  \ \ _\ \___\ \/  /
//  /_/ |_/ /_/    \__\ \_\  \_\\______\\___/

ID: mdnahidibnaharun
LANG: C++
TASK: practice 
*/
vector<int>a;
void mxn(){
    int mxxn=INT_MIN;
    for(auto x:a)mxxn=max(mxxn,x);
    cout<<"The maximum number : "<<mxxn;
}
void mnn(){
    int minn=INT_MAX;
    for(auto x:a)minn=min(minn,x);
    cout<<"The minimum number : "<<minn;
}
void pnm(int n){
    int cnt=0;
    for(int i=0;i<n;i++){
        bool pm=true;
        if(a[i]!=1){
        for(int j=2;j*j<=a[i];j++){
            if(a[i]%j==0){
                pm=false;
                break;
            }
        }
    if(pm)cnt++;
        }
    }
    cout<<"The number of prime numbers : "<<cnt;
}
void paln(int n){
    int cnt=0;
    for(int i=0;i<n;i++){
        int x=a[i];
        string s="";
        while(x>0){
            int l=x%10;
            x = x/10;
            s+=(char)(l+'0');
        }
        string nw=s;
        reverse(s.begin(),s.end());
        if(nw==s)cnt++;
    }
    cout<<"The number of palindrome numbers : "<<cnt;
}
void mdiv(int n){
    vector<int>mc;
    for(int i=0;i<n;i++){
        int x=a[i],cnt=0;
        for(int j=1;j*j<=x;j++){
            if(x%j==0)cnt++;
        }
        mc.push_back(cnt);
    }
    int mcn=*max_element(mc.begin(),mc.end());
    int mn=0;
    for(int i=0;i<n;i++){
        if(mc[i]==mcn){
            mn=max(mn,a[i]);
        }
    }
    cout<<"The number that has the maximum number of divisors : "<<mn;
}
void solve(){
int n;cin>>n;
a.resize(n);
for(auto &x:a)cin>>x;
mxn();cout<<endl;
mnn();cout<<endl;
pnm(n);cout<<endl;
paln(n);cout<<endl;
mdiv(n);

}


int main(){
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    // int t;cin>>t;
    // while(t--){
        solve();
    //     cout<<endl;
    // }
return 0;
}

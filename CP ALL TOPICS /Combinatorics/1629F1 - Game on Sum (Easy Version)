#include<bits/stdc++.h>
using namespace std;
using ll = long long;
using ull = unsigned long long;
const int INF=500;
const ll MOD = 1000000007;
/*
//      _   __  ___  __   __ _______ _______
//     / | / / / _ \ \ \__\ \\__  __\\  __  \ 
//    /  |/ / / /_\ \ \  ___ \  \ \   \ \ \  \ 
//   / /|  / / ____  \ \ \  \ \ _\ \___\ \/  /
//  /_/ |_/ /_/    \__\ \_\  \_\\______\\___/

ID: mdnahidibnaharun
LANG: C++
TASK: practice 
*/

ll modexp(ll a, ll b) {
    if (b == 0) return 1;
    ll r = modexp(a, b/2);
    r = (r * r) % MOD;
    if (b & 1) r = (r * a) % MOD;
    return r;
}

ll inv(ll a) {
    return modexp(a, MOD - 2);
}

void solve() {
    ll n, m, k;
    cin >> n >> m >> k;
    ll ans = 0;

    if (n <= m) {
        ans = (n * k) % MOD;
    } else {
        ll b = inv(2);
        ll r = n - m - 1;
        ll N = m + r;
        vector<ll> fact(N + 1, 1), invfact(N + 1, 1);
        for (ll i = 1; i <= N; ++i) fact[i] = fact[i - 1] * i % MOD;
        invfact[N] = inv(fact[N]);
        for (ll i = N; i >= 1; --i) invfact[i - 1] = invfact[i] * i % MOD;

        for (ll i = 0; i <= m; ++i) {
            ll c = fact[N - i] * invfact[r] % MOD * invfact[N - i - r] % MOD;
            ans = (ans + i * c % MOD * modexp(b, n - i) % MOD) % MOD;
        }

        ans = ans * k % MOD;
    }

    cout << ans;
}
int main(){
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    int t;cin>>t;
    while(t--){
    solve();
    cout<<endl;
    }
}

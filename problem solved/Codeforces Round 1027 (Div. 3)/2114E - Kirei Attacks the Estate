#include<bits/stdc++.h>
using namespace std;
using ll = long long;
using ull = unsigned long long;
const ll M=1e9+1;
/*
//      _   __  ___  __   __ _______ _______
//     / | / / / _ \ \ \__\ \\__  __\\  __  \ 
//    /  |/ / / /_\ \ \  ___ \  \ \   \ \ \  \ 
//   / /|  / / ____  \ \ \  \ \ _\ \___\ \/  /
//  /_/ |_/ /_/    \__\ \_\  \_\\______\\___/

ID: mdnahidibnaharun
LANG: C++
TASK: practice 
*/
void solve(){
int n;cin>>n;
vector<ll>ar(n+1);for(int i=1;i<=n;i++)cin>>ar[i];
vector<vector<int>>tadl(n+1);
for(int k=0;k<n-1;k++){
    int u,v;cin>>u>>v;tadl[u].push_back(v);tadl[v].push_back(u);
}
vector<ll>dpt(n+1),g(n+1);
vector<pair<int,int>>dfs;
dfs.reserve(n);
dfs.emplace_back(1,0);
while(!dfs.empty()){
    int cnode = dfs.back().first;
int pnt = dfs.back().second;
    dfs.pop_back();
    if(pnt==0)dpt[cnode]=g[cnode]=ar[cnode];
    else{
        dpt[cnode]=max(ar[cnode],ar[cnode]-g[pnt]);g[cnode]=min(ar[cnode],ar[cnode]-dpt[pnt]);
    }
    for(int x:tadl[cnode]){
        if(x==pnt)continue;
        else 
        dfs.emplace_back(x,cnode);
    }
}
for(int i=1;i<=n;i++)cout<<dpt[i]<<" ";
cout<<endl;
}
int main(){
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    //  freopen("tracing.in", "r", stdin); 
    // freopen("tracing.out", "w", stdout); 
  int t;cin>>t;
  while(t--)
    solve();
} 
  

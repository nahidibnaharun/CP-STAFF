#include<bits/stdc++.h>
using namespace std;
using ll = long long;
/*
//	    _   __  ___  __   __ _______ _______
//	   / | / / / _ \ \ \__\ \\__  __\\  __  \ 
//	  /  |/ / / /_\ \ \  ___ \  \ \   \ \ \  \ 
//	 / /|  / / ____  \ \ \  \ \ _\ \___\ \/  /
//	/_/ |_/ /_/    \__\ \_\  \_\\______\\___/

ID: mdnahidibnaharun
LANG: C++
TASK: practice 
*/

int main(){
    ios_base::sync_with_stdio(false);
	cin.tie(NULL);
    //  freopen("badmilk.in", "r", stdin); 
    // freopen("badmilk.out", "w", stdout); 
   int n,m;
   cin>>n>>m;

   vector<vector<pair<int,ll>>> adj(n+1);
   for(int i=0;i<m;i++){
    int u,v;
    ll w;
    cin>>u>>v>>w;
    adj[u].push_back({v,w});
    adj[v].push_back({u,w});
   }

   priority_queue<pair<ll,int>, vector<pair<ll,int>>,greater<pair<ll,int>>> pq;
   vector<bool> visited(n+1,false);
   pq.push({0,1});
   ll totalCost=0;
   int cnt=0;

   while(!pq.empty() && cnt <n){
    auto [cost, u] = pq.top();
    pq.pop();

    if(visited[u])continue;

    visited[u] = true;
    totalCost += cost;
    cnt++;

    for(auto &edge: adj[u]){
        int v=edge.first;
        ll w= edge.second;
        if(!visited[v])pq.push({w,v});
    }
   }

   if(cnt<n)cout<<"IMPOSSIBLE";
   else cout<<totalCost;
   
    
    return 0;   
}

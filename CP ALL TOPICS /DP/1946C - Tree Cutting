#include<bits/stdc++.h>
using namespace std;
using ll = long long;
using ull = unsigned long long;
using ui = unsigned int;
const int INF = 1e9;
const int MOD = 1e9+7;
/*
//

         _   _  __    _   _  _____   _____
//     / | / / / _ \ \ \__\ \\__  _\\  _   \ 
//    /  |/ / / /_\ \ \  __  \  \ \  \ \ \  \ 
//   / /|  / / ____  \ \ \  \ _\_\ \__\ \/  /
//  /_/ |_/ /_/     \__\\_\  \_\\______\\___/
 
ID: mdnahidibnaharun
LANG: C++
TASK: practice
*/
void solve() {
    int n, k;
    cin >> n >> k;
    vector<vector<int>> g(n);
    for(int i = 0; i < n - 1; i++) {
        int u, v;
        cin >> u >> v;
        --u; --v;
        g[u].push_back(v);
        g[v].push_back(u);
    }

    auto check = [&](int x) -> bool {
        int parts = 0;
        function<int(int, int)> dfs = [&](int u, int p) -> int {
            int size = 1;
            for(int v : g[u]) {
                if(v == p) continue;
                size += dfs(v, u);
            }
            if(size >= x && u != p) {
                parts++;
                return 0;
            }
            return size;
        };

        int rootSize = dfs(0, 0);
        return (parts > k || (rootSize >= x && parts == k));
    };

    int lo = 1, hi = n / (k + 1) + 1;
    while(hi - lo > 1) {
        int mid = (lo + hi) / 2;
        if(check(mid)) lo = mid;
        else hi = mid;
    }

    cout << lo;
}
int main(){
ios_base::sync_with_stdio(false);
cin.tie(NULL);
    int Test_Case;
    cin >> Test_Case;
    
    while(Test_Case--){
        solve();
        cout<<endl;
    }
return 0;
}
    

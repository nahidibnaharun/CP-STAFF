#include<bits/stdc++.h>
using namespace std;
using ll = long long;
/*
//	    _   __  ___  __   __ _______ _______
//	   / | / / / _ \ \ \__\ \\__  __\\  __  \ 
//	  /  |/ / / /_\ \ \  ___ \  \ \   \ \ \  \ 
//	 / /|  / / ____  \ \ \  \ \ _\ \___\ \/  /
//	/_/ |_/ /_/    \__\ \_\  \_\\______\\___/

ID: mdnahidibnaharun
LANG: C++
TASK: practice 
*/
struct var{
    int a;
    int b;
    int c;
};
int main(){
    ios_base::sync_with_stdio(false);
	cin.tie(NULL);
    //  freopen("badmilk.in", "r", stdin); 
    // freopen("badmilk.out", "w", stdout); 
   
    int n,m,d,s;
    cin>>n>>m>>d>>s;
    vector<var> drinkLogs(d);

    for(int i=0;i<d;i++)
    cin>>drinkLogs[i].a>>drinkLogs[i].b>>drinkLogs[i].c;

    vector<pair<int,int>> sickRecords(s);
    for(int i=0;i<s;i++)cin>>sickRecords[i].first>>sickRecords[i].second;
    unordered_map<int,int> milkCount;
    for(int i=0;i<s;i++){
        int time= sickRecords[i].second,person = sickRecords[i].first;
        for(int j=0;j<d;j++){
            if(time> drinkLogs[j].c && person == drinkLogs[j].a){
                milkCount[drinkLogs[j].b]++;
            }
        }
    }
    unordered_set<int> suspectMilks,affectedPeople;
    for(int i=1;i<=m;i++){
        if(milkCount[i]>=s)suspectMilks.insert(i);
    }


    for(int i=0;i<d;i++){

        if(suspectMilks.count(drinkLogs[i].b)){
            affectedPeople.insert(drinkLogs[i].a);
        }
    }
    cout<<affectedPeople.size()<<endl;


    
    return 0;   
}
